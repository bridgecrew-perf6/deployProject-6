# This config uses the `.circleci/extended/orb-test.yml` as its base, and then publishes the app to S3.
# The workflow contained here demonstrates a practical application of `post-steps`
# and using workspace persistence
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@5.0.1
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@1.0.0
jobs:
  build_and_deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: '16.13'
      - checkout
      - aws-cli/setup
      - eb/setup
      - run:
          name: Setup Environment Variables
          command: |
            npm run env:setup
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            npm run backend:build
      - run:
          name: Deploy Frontend
          command:
            npm run frontend:deploy
      - run:
          name: Deploy Backend
          command:
            npm run backend:deploy
workflows:
  deployment:
    jobs:
      - build_and_deploy:
          filters:
            branches:
              only: master
